# https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#examples
# https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
apiVersion: v1
kind: Pod
metadata:
  labels:
    test: liveness
  name: liveness-exec
spec:
  containers:
    - name: liveness
      image: k8s.gcr.io/busybox
      args:
        - /bin/sh
        - -c
        - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600
      livenessProbe:
        exec:
          command:
            - cat
            - /tmp/healthy

        initialDelaySeconds: 5
          # Number of seconds after the container has started before liveness or readiness probes are initiated. Defaults to 0 seconds.
          # Minimum value is 0

        periodSeconds: 5
          # How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.

        # timeoutSeconds: 1
          # Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1.

        failureThreshold: 1
          # how many times endpoint have to fail before kubernetes will start restart procedure
          # When a Pod starts and the probe fails, Kubernetes will try failureThreshold times before giving up.
          # Giving up in case of liveness probe means restarting the container.
          # In case of readiness probe the Pod will be marked Unready. Defaults to 3. Minimum value is 1.

        # successThreshold: 1
          # Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1.
          # Must be 1 for liveness. Minimum value is 1.

        # more about all of these : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes

  terminationGracePeriodSeconds: 3 # how long to wait for SIGKILL handler to finish before pod will be killed by k8s
    # alternative is to use --grace-period
      # kubectl delete ... --grace-period=<seconds> # more about https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
      # https://cloud.google.com/kubernetes-engine/docs/concepts/pod#pod_termination
    # more about how grace period works:
      # https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods


# to see how it behaves:
# kubectl describe pod liveness-exec
# watch kubectl get po -o wide